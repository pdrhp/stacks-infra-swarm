otelcol.receiver.otlp "default" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.processor.batch.default.input]
    logs    = [otelcol.processor.batch.default.input]
    traces  = [otelcol.processor.batch.default.input]
  }
}

otelcol.processor.batch "default" {
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    logs    = [otelcol.exporter.loki.default.input]
    traces  = [otelcol.exporter.otlp.default.input]
  }
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.prometheus_endpoint.receiver]
}

prometheus.remote_write "prometheus_endpoint" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

otelcol.exporter.loki "default" {
  forward_to = [loki.write.loki_endpoint.receiver]
}

loki.write "loki_endpoint" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

otelcol.exporter.otlp "default" {
  client {
    endpoint = "tempo:4317"
  }
}

discovery.docker "linux" {
  host = "unix:///var/run/docker.sock"
}

discovery.relabel "docker_containers" {
  targets = discovery.docker.linux.targets

  rule {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/?(.*)"
    target_label = "service_name"
    replacement   = "$1"
  }
}

loki.source.docker "default" {
  host = "unix:///var/run/docker.sock"
  targets = discovery.docker.linux.targets
  labels     = {"platform" = "docker", "logger" = "alloy"}
  relabel_rules = discovery.relabel.docker_containers.rules
  forward_to = [loki.write.loki_endpoint.receiver]
}

prometheus.scrape "self_scrape" {
  targets = [
    { __address__ = "localhost:12345", job = "alloy" },
  ]
  forward_to = [prometheus.remote_write.prometheus_endpoint.receiver]
}
